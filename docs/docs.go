// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-10-03 18:00:07.074452823 +0200 CEST m=+0.038673923

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "GPL 2.0",
            "url": "https://opensource.org/licenses/gpl-2.0.php"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/courses/{faculty}": {
            "get": {
                "description": "GetKnownCourses",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the list of all available courses in a specific faculty.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/faculties": {
            "get": {
                "description": "GetFaculties",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the list of all available faculties.",
                "operationId": "get-string-by-int",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/parser.Faculty"
                            }
                        }
                    }
                }
            }
        },
        "/groups/{faculty}": {
            "get": {
                "description": "GetGroups",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns an array of Groups in a specific faculty.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/groups/{faculty}/years": {
            "get": {
                "description": "GetGroupsWithYears",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns an array of Groups with years in a specific faculty.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.GroupWithYears"
                            }
                        }
                    }
                }
            }
        },
        "/professors/{faculty}": {
            "get": {
                "description": "GetKnownProfessors",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns an array of professors in a specific faculty.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/course/{faculty}/{name}": {
            "get": {
                "description": "TimetableByCourse",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the schedule for a specific course.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of course",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.Event"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/faculty/{faculty}": {
            "get": {
                "description": "GetAllOfFaculty",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the schedules of all groups in the faculty.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.Event"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/faculty/{faculty}/{type}": {
            "get": {
                "description": "TimetableByGroupType",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the schedule for a specific Group Type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.Event"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/faculty/{faculty}/{type}/{year}": {
            "get": {
                "description": "TimetableByGroupTypeAndYear",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the schedule for a specific Group Type and year.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.Event"
                            }
                        }
                    }
                }
            }
        },
        "/schedule/professor/{faculty}/{type}": {
            "get": {
                "description": "TimetableByProfessor",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the schedule for a specific professor.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of professor",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/visualizer.Event"
                            }
                        }
                    }
                }
            }
        },
        "/week": {
            "get": {
                "description": "GetCurrentWeek",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the current week number.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/visualizer.CurrentWeek"
                        }
                    }
                }
            }
        },
        "/years/{faculty}/{type}": {
            "get": {
                "description": "GetYearsOfType",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns an array of years in a specific group type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Faculty",
                        "name": "faculty",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "parser.Faculty": {
            "type": "object",
            "properties": {
                "longName": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                }
            }
        },
        "visualizer.CurrentWeek": {
            "type": "object",
            "properties": {
                "currentWeek": {
                    "type": "integer"
                }
            }
        },
        "visualizer.Event": {
            "type": "object",
            "properties": {
                "beginWeek": {
                    "type": "integer"
                },
                "course": {
                    "type": "string"
                },
                "dayOfWeek": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "endWeek": {
                    "type": "integer"
                },
                "group": {
                    "type": "object",
                    "$ref": "#/definitions/visualizer.Group"
                },
                "professor": {
                    "type": "string"
                },
                "room": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "visualizer.Group": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "subGroup": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "visualizer.GroupWithYears": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "years": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "api.urnik-mb.cf",
	BasePath:    "/api/v2",
	Schemes:     []string{},
	Title:       "Swagger za UMU REST API",
	Description: "Urnik Mariborske Univerze (UMU) je projekt katerega cilj je, da študentom UM nudi boljšo storitev za urnik kot je WiseTimeTables.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
